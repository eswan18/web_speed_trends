#!/usr/bin/python
import datetime as dt
import Queue as q
import time


#For development, hardcoded time: run for a week, once every 60 minutes
days_run = 7
hours_run = 0
minutes_run = 0
minutes_interval = 60

#Convert everything to minutes
#(add an extra minute of buffer time because we're spending a (tiny) amount of time on initialization)
minutes_run = 24*60*days_run + 60*hours_run + minutes_run
#Calculate how many runs you'll need
# (the +1 is for the first run, which doesn't occur after a time interval)
n_runs = int(minutes_run/minutes_interval) + 1


#Calculate all the date/times at which a run should happen
now = dt.datetime.now()
interval = dt.timedelta(minutes = minutes_interval)
#Create FIFO queue to store the times
times = q.Queue(maxsize = n_runs)
q_time = now #time iterator
i = 0 #loop counter
while (not times.full()):
	times.put(q_time)
	q_time = q_time + interval

#Running & Waiting
next_time = times.get()
while(1):
	#If it's time to run the next test
	if(dt.datetime.now() >= next_time):
		#RUN
		print "Running at"
		print dt.datetime.now()
		#If we've emptied the queue, end the loop
		if(times.empty()):
			break
		#If there are more times left, get the next one
		else:
			next_time = times.get()
	#wait for a minute
	time.sleep(1)
